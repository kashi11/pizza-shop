[{"D:\\Web\\Pizza POS app\\client\\src\\index.js":"1","D:\\Web\\Pizza POS app\\client\\src\\App.js":"2","D:\\Web\\Pizza POS app\\client\\src\\reportWebVitals.js":"3","D:\\Web\\Pizza POS app\\client\\src\\components\\home.js":"4","D:\\Web\\Pizza POS app\\client\\src\\components\\admin\\admin.js":"5","D:\\Web\\Pizza POS app\\client\\src\\components\\admin\\orders.js":"6","D:\\Web\\Pizza POS app\\client\\src\\components\\admin\\menu.js":"7","D:\\Web\\Pizza POS app\\client\\src\\components\\admin\\addItem.js":"8","D:\\Web\\Pizza POS app\\client\\src\\redux\\actions\\adminActions.js":"9","D:\\Web\\Pizza POS app\\client\\src\\redux\\actions\\types.js":"10","D:\\Web\\Pizza POS app\\client\\src\\redux\\reducers\\index.js":"11","D:\\Web\\Pizza POS app\\client\\src\\redux\\reducers\\errorReducer.js":"12","D:\\Web\\Pizza POS app\\client\\src\\redux\\reducers\\orderReducer.js":"13","D:\\Web\\Pizza POS app\\client\\src\\redux\\actions\\custActions.js":"14","D:\\Web\\Pizza POS app\\client\\src\\components\\customer\\customer.js":"15","D:\\Web\\Pizza POS app\\client\\src\\components\\customer\\menuTable.js":"16","D:\\Web\\Pizza POS app\\client\\src\\components\\employee.js":"17","D:\\Web\\Pizza POS app\\client\\src\\redux\\actions\\empActions.js":"18","D:\\Web\\Pizza POS app\\client\\src\\redux\\store.js":"19"},{"size":710,"mtime":1612262942663,"results":"20","hashOfConfig":"21"},{"size":702,"mtime":1612005220913,"results":"22","hashOfConfig":"21"},{"size":362,"mtime":499162500000,"results":"23","hashOfConfig":"21"},{"size":2185,"mtime":1612217342604,"results":"24","hashOfConfig":"21"},{"size":5429,"mtime":1612217611329,"results":"25","hashOfConfig":"21"},{"size":2288,"mtime":1612210699630,"results":"26","hashOfConfig":"21"},{"size":4530,"mtime":1612010827640,"results":"27","hashOfConfig":"21"},{"size":2869,"mtime":1611779982297,"results":"28","hashOfConfig":"21"},{"size":1699,"mtime":1612263872634,"results":"29","hashOfConfig":"21"},{"size":565,"mtime":1612172980964,"results":"30","hashOfConfig":"21"},{"size":229,"mtime":1611775535894,"results":"31","hashOfConfig":"21"},{"size":738,"mtime":1606499226690,"results":"32","hashOfConfig":"21"},{"size":1130,"mtime":1612208013684,"results":"33","hashOfConfig":"21"},{"size":557,"mtime":1612263890425,"results":"34","hashOfConfig":"21"},{"size":10710,"mtime":1612270873678,"results":"35","hashOfConfig":"21"},{"size":4548,"mtime":1612010945830,"results":"36","hashOfConfig":"21"},{"size":3360,"mtime":1612269992730,"results":"37","hashOfConfig":"21"},{"size":418,"mtime":1612263896857,"results":"38","hashOfConfig":"21"},{"size":399,"mtime":1612262947257,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1yc72m3",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"42"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"D:\\Web\\Pizza POS app\\client\\src\\index.js",[],["85","86"],"D:\\Web\\Pizza POS app\\client\\src\\App.js",[],"D:\\Web\\Pizza POS app\\client\\src\\reportWebVitals.js",[],"D:\\Web\\Pizza POS app\\client\\src\\components\\home.js",[],"D:\\Web\\Pizza POS app\\client\\src\\components\\admin\\admin.js",[],"D:\\Web\\Pizza POS app\\client\\src\\components\\admin\\orders.js",["87"],"import { DataGrid } from \"@material-ui/data-grid\";\r\nimport React, { useEffect } from \"react\";\r\nimport { fetchOrders, clearOrders } from \"../../redux/actions/adminActions\";\r\nimport { connect } from \"react-redux\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport { useParams } from \"react-router-dom\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  colCell: {\r\n    fontWeight: 700,\r\n  },\r\n  header: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(2),\r\n    textAlign: \"left\",\r\n    textTransform: \"capitalize\",\r\n  },\r\n}));\r\nconst columns = [\r\n  { field: \"id\", headerName: \"No.\", width: 90 },\r\n  { field: \"name\", headerName: \"Customer's Name\", width: 190 },\r\n  { field: \"flavour\", headerName: \"Flavour\", width: 130 },\r\n  { field: \"crust\", headerName: \"Crust\", width: 130 },\r\n  { field: \"topping\", headerName: \"Extra Toppings\", width: 180 },\r\n  { field: \"size\", headerName: \"Size\", width: 110 },\r\n  { field: \"price\", headerName: \"Price (Rs.)\", width: 150 },\r\n];\r\nfunction Orders(props) {\r\n  const params = useParams();\r\n  const classes = useStyles();\r\n  useEffect(() => {\r\n    props.clearOrders();\r\n    props.fetchOrders(params.id);\r\n  }, [params.id]);\r\n  var rows = [];\r\n  if (props.orders.length !== 0) {\r\n    rows = props.orders.map((order, index) => {\r\n      return {\r\n        id: index + 1,\r\n        name: order.name,\r\n        flavour: order.flavour,\r\n        crust: order.crust,\r\n        topping: order.topping,\r\n        size: order.size,\r\n        price: order.price,\r\n      };\r\n    });\r\n  }\r\n  return (\r\n    <div style={{ height: \"75vh\", width: \"100%\" }}>\r\n      <Typography className={classes.header} component=\"h3\" variant=\"h4\">\r\n        {params.id} Orders\r\n      </Typography>\r\n      <DataGrid\r\n        className={{ colCellTitle: classes.colCell }}\r\n        rows={rows}\r\n        columns={columns}\r\n        pagination\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchOrders: (id) => {\r\n      dispatch(fetchOrders(id));\r\n    },\r\n    clearOrders: () => dispatch(clearOrders()),\r\n  };\r\n};\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    orders: state.fetch.orders,\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Orders);\r\n","D:\\Web\\Pizza POS app\\client\\src\\components\\admin\\menu.js",["88"],"import React, { useEffect } from \"react\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  Container,\r\n  Grid,\r\n  Icon,\r\n  IconButton,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/AddCircle\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport DeleteForeverTwoToneIcon from \"@material-ui/icons/DeleteForeverTwoTone\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport AddItem from \"./addItem\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  fetchMenu,\r\n  deleteMenu,\r\n  clearMenu,\r\n} from \"../../redux/actions/adminActions\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginTop: theme.spacing(2),\r\n    minWidth: 320,\r\n    maxHeight: 50,\r\n  },\r\n  header: {\r\n    padding: 14,\r\n  },\r\n  content: {\r\n    padding: 0,\r\n  },\r\n  button: {\r\n    marginTop: theme.spacing(6),\r\n    width: 80,\r\n  },\r\n  icon: {\r\n    lineHeight: 1,\r\n    marginRight: 5,\r\n  },\r\n  addIcon: {\r\n    lineHeight: 1,\r\n    padding: 0,\r\n  },\r\n  container: {\r\n    textAlign: \"left\",\r\n    paddingBottom: theme.spacing(2),\r\n    [theme.breakpoints.up(\"xs\")]: {\r\n      padding: 0,\r\n    },\r\n\r\n  },\r\n}));\r\n\r\nfunction Menu(props) {\r\n  const params = useParams();\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const deleteItem = (ev) => {\r\n    props.deleteItem(ev.currentTarget.id);\r\n  };\r\n  useEffect(() => {\r\n    props.clearMenu();\r\n    props.fetchMenu(params.id);\r\n  }, [params.id,props.added]);\r\n\r\n  return (\r\n    <Container className={classes.container}>\r\n      <Typography variant=\"h4\" component=\"h2\">\r\n        {params.id}\r\n      </Typography>\r\n      <Button\r\n        color=\"secondary\"\r\n        variant=\"contained\"\r\n        className={classes.button}\r\n        onClick={handleClickOpen}\r\n      >\r\n        <Icon className={classes.icon}>\r\n          <AddIcon className={classes.addIcon} />\r\n        </Icon>\r\n        <Typography>Add</Typography>\r\n      </Button>\r\n      <Card className={classes.root}>\r\n        <CardContent className={classes.header}>\r\n          <Grid container spacing={0} justify=\"space-evenly\">\r\n            <Grid item style={{ minWidth: 100 }}>\r\n              <Typography variant=\"inherit\" component=\"h4\">\r\n                Name\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item style={{ minWidth: 50 }}>\r\n              <Typography variant=\"inherit\" component=\"h4\">\r\n                Price(Rs.)\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item style={{ minWidth: 40 }}>\r\n              <Typography variant=\"inherit\" component=\"h4\">\r\n                Remove\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n      </Card>\r\n      {props.menu.map((item) => {\r\n        return (\r\n          <Card key={item._id} className={classes.root}>\r\n            <CardContent className={classes.content}>\r\n              <Grid\r\n                container\r\n                spacing={0}\r\n                justify=\"space-evenly\"\r\n                alignItems=\"center\"\r\n              >\r\n                <Grid item style={{ minWidth: 100 }}>\r\n                  <Typography>{item.name}</Typography>\r\n                </Grid>\r\n                <Grid item style={{ minWidth: 50 }}>\r\n                  <Typography>{item.price}</Typography>\r\n                </Grid>\r\n                <Grid item style={{ minWidth: 55 }}>\r\n                  <Typography>\r\n                    <IconButton\r\n                      id={item._id}\r\n                      onClick={deleteItem}\r\n                      color=\"secondary\"\r\n                    >\r\n                      <Icon>\r\n                        <DeleteForeverTwoToneIcon className={classes.addIcon} />\r\n                      </Icon>\r\n                    </IconButton>\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n            </CardContent>\r\n          </Card>\r\n        );\r\n      })}\r\n      <AddItem op={open} hClose={handleClose} type={params.id} />\r\n    </Container>\r\n  );\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchMenu: (type) => dispatch(fetchMenu(type)),\r\n    deleteItem: (id) => dispatch(deleteMenu(id)),\r\n    clearMenu: () => dispatch(clearMenu()),\r\n  };\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    menu: state.fetch.menu,\r\n    added: state.fetch.added,\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Menu);\r\n","D:\\Web\\Pizza POS app\\client\\src\\components\\admin\\addItem.js",[],["89","90"],"D:\\Web\\Pizza POS app\\client\\src\\redux\\actions\\adminActions.js",[],"D:\\Web\\Pizza POS app\\client\\src\\redux\\actions\\types.js",[],"D:\\Web\\Pizza POS app\\client\\src\\redux\\reducers\\index.js",[],"D:\\Web\\Pizza POS app\\client\\src\\redux\\reducers\\errorReducer.js",["91"],"import { GET_ERRORS, CLEAR_ERRORS, GET_ADD_ERRORS } from '../actions/types';\r\nconst initialState = {\r\n    msg: {},\r\n    status: null,\r\n    addMsg: \"\",\r\n}\r\n\r\n// RETURN ERRORS\r\nexport default function(state = initialState,action) {\r\n  switch (action.type) {\r\n      case GET_ERRORS:\r\n          return { \r\n              msg: action.payload.data.msg,\r\n              status: action.payload.status,\r\n            };\r\n      case CLEAR_ERRORS:\r\n          return { \r\n              msg: {},\r\n              status: null,\r\n            };\r\n      case GET_ADD_ERRORS:\r\n          return {\r\n            status: action.payload.data.status,\r\n            addMsg: action.payload.data.status,\r\n          }\r\n      default:\r\n            return state;\r\n  }\r\n};\r\n\r\n","D:\\Web\\Pizza POS app\\client\\src\\redux\\reducers\\orderReducer.js",["92"],"import {\r\n  FETCH_ORDERS,\r\n  FETCH_MENU,\r\n  CLEAR_MENU,\r\n  DELETE_MENU,\r\n  MENU_ADDED,\r\n  CLEAR_ORDERS,\r\n  ORDER_COMPLETED,\r\n} from \"../actions/types\";\r\nconst initialState = {\r\n  orders: [],\r\n  menu: [],\r\n  loading: false,\r\n  added: false,\r\n  compl: false\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case FETCH_ORDERS:\r\n      return {\r\n        ...state,\r\n        compl: false,\r\n        orders: action.payload,\r\n      };\r\n    case FETCH_MENU:\r\n      return {\r\n        ...state,\r\n        added: false,\r\n        menu: action.payload,\r\n      };\r\n    case CLEAR_MENU:\r\n      return {\r\n        ...state,\r\n        menu: [],\r\n      };\r\n    case CLEAR_ORDERS:\r\n      return {\r\n        ...state,\r\n        orders: [],\r\n      };\r\n    case DELETE_MENU:\r\n      return {\r\n        ...state,\r\n        menu: state.menu.filter((item) => item._id !== action.id),\r\n      };\r\n    case MENU_ADDED:\r\n      return {\r\n        ...state,\r\n        added: true,\r\n      };\r\n    case ORDER_COMPLETED:\r\n      return {\r\n        ...state,\r\n        compl: true,\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","D:\\Web\\Pizza POS app\\client\\src\\redux\\actions\\custActions.js",[],"D:\\Web\\Pizza POS app\\client\\src\\components\\customer\\customer.js",["93"],"D:\\Web\\Pizza POS app\\client\\src\\components\\customer\\menuTable.js",[],"D:\\Web\\Pizza POS app\\client\\src\\components\\employee.js",["94"],"import { DataGrid } from \"@material-ui/data-grid\";\r\nimport React, { useEffect } from \"react\";\r\nimport { fetchOrders } from \".././redux/actions/adminActions\";\r\nimport { completeOrder } from \".././redux/actions/empActions\";\r\nimport { connect } from \"react-redux\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Typography,\r\n  IconButton,\r\n  AppBar,\r\n  Toolbar,\r\n  Button,\r\n  Box,\r\n} from \"@material-ui/core\";\r\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\r\nimport { useHistory } from \"react-router-dom\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  colCell: {\r\n    fontWeight: 700,\r\n  },\r\n  header: {\r\n    marginTop: theme.spacing(3),\r\n    marginBottom: theme.spacing(2),\r\n    textAlign: \"left\",\r\n  },\r\n}));\r\nvar rows = [];\r\nfunction Employee(props) {\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  useEffect(() => {\r\n    props.fetchOrders(\"inprogress\");\r\n  }, [props.completed]);\r\n  const columns = [\r\n    { field: \"id\", headerName: \"No.\", width: 100 },\r\n    { field: \"name\", headerName: \"Customer's Name\", width: 190 },\r\n    { field: \"flavour\", headerName: \"Flavour\", width: 130 },\r\n    { field: \"crust\", headerName: \"Crust\", width: 130 },\r\n    { field: \"topping\", headerName: \"Extra Toppings\", width: 180 },\r\n    { field: \"size\", headerName: \"Size\", width: 110 },\r\n    { field: \"price\", headerName: \"Price (Rs.)\", width: 150 },\r\n    {\r\n      field: \"complete\",\r\n      headerName: \"Mark Completed\",\r\n      width: 200,\r\n      renderCell: (params) => {\r\n        const handleClick = () => {\r\n          props.completeOrder(props.orders[params.rowIndex]._id);\r\n        };\r\n        return (\r\n          <strong>\r\n            <IconButton color=\"secondary\" onClick={handleClick}>\r\n              <CheckCircleIcon />\r\n            </IconButton>\r\n          </strong>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n  if (props.orders.length !== 0) {\r\n    rows = props.orders.map((order, index) => {\r\n      return {\r\n        id: index + 1,\r\n        name: order.name,\r\n        flavour: order.flavour,\r\n        crust: order.crust,\r\n        topping: order.topping,\r\n        size: order.size,\r\n        price: order.price,\r\n      };\r\n    });\r\n  } else {\r\n    rows = [];\r\n  }\r\n  const home = () => {\r\n    history.push(\"/\");\r\n  };\r\n  return (\r\n    <div>\r\n      <AppBar position=\"fixed\" color=\"secondary\">\r\n        <Toolbar>\r\n          <Box display=\"flex\" flexGrow={1}>\r\n            <Typography>Pizza Shop</Typography>\r\n          </Box>\r\n          <Button variant=\"outlined\" onClick={home}>\r\n            Home\r\n          </Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Typography variant=\"h4\" component=\"h3\" className={classes.header}>\r\n        Take Orders\r\n      </Typography>\r\n      <div style={{ height: \"77vh\", width: \"100%\" }}>\r\n        <DataGrid\r\n          className={{ colCellTitle: classes.colCell }}\r\n          rows={rows}\r\n          columns={columns}\r\n          pagination\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchOrders: (id) => {\r\n      dispatch(fetchOrders(id));\r\n    },\r\n    completeOrder: (id) => dispatch(completeOrder(id)),\r\n  };\r\n};\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    orders: state.fetch.orders,\r\n    completed: state.fetch.compl,\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Employee);\r\n","D:\\Web\\Pizza POS app\\client\\src\\redux\\actions\\empActions.js",[],"D:\\Web\\Pizza POS app\\client\\src\\redux\\store.js",[],{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":34,"column":6,"nodeType":"101","endLine":34,"endColumn":17,"suggestions":"102"},{"ruleId":"99","severity":1,"message":"100","line":77,"column":6,"nodeType":"101","endLine":77,"endColumn":29,"suggestions":"103"},{"ruleId":"95","replacedBy":"104"},{"ruleId":"97","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":9,"column":1,"nodeType":"108","endLine":29,"endColumn":2},{"ruleId":"106","severity":1,"message":"107","line":18,"column":1,"nodeType":"108","endLine":60,"endColumn":2},{"ruleId":"99","severity":1,"message":"109","line":66,"column":6,"nodeType":"101","endLine":66,"endColumn":61,"suggestions":"110"},{"ruleId":"99","severity":1,"message":"100","line":33,"column":6,"nodeType":"101","endLine":33,"endColumn":23,"suggestions":"111"},"no-native-reassign",["112"],"no-negated-in-lhs",["113"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["114"],["115"],["112"],["113"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","React Hook useEffect has missing dependencies: 'priceChange' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["116"],["117"],"no-global-assign","no-unsafe-negation",{"desc":"118","fix":"119"},{"desc":"120","fix":"121"},{"desc":"122","fix":"123"},{"desc":"124","fix":"125"},"Update the dependencies array to be: [params.id, props]",{"range":"126","text":"127"},"Update the dependencies array to be: [params.id, props, props.added]",{"range":"128","text":"129"},"Update the dependencies array to be: [flavour.price, crust.price, size.price, topping.price, priceChange, props]",{"range":"130","text":"131"},"Update the dependencies array to be: [props, props.completed]",{"range":"132","text":"133"},[1218,1229],"[params.id, props]",[1568,1591],"[params.id, props, props.added]",[1676,1731],"[flavour.price, crust.price, size.price, topping.price, priceChange, props]",[920,937],"[props, props.completed]"]